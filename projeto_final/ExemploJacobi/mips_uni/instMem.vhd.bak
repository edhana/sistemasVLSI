LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY instMem IS

PORT (
	clock: 	IN STD_LOGIC;
	data: 	IN STD_LOGIC_VECTOR (31 DOWNTO 0);
	wr_addr: IN INTEGER RANGE 0 to 31;
	rd_addr: IN INTEGER RANGE 0 to 31;
	we: 		IN STD_LOGIC;
	q: 		OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
);
END instMem;

ARCHITECTURE rtl OF instMem IS

TYPE MEM IS word_array();
SIGNAL ram_block: MEM;
SIGNAL read_address_reg: INTEGER RANGE 0 to 31;
BEGIN
PROCESS (clock)
BEGIN
IF (clock'event AND clock = '1') THEN
IF (we = '1') THEN
ram_block(write_address) <= data;
END IF;
read_address_reg <= read_address;
END IF;
END PROCESS;
q <= ram_block(read_address_reg);
END rtl;